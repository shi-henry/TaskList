1. c++11中支持真能指针，头文件memory>，使编译器支持c++，可以用命令 g++ -std=c++11
2. 不使用c++11，需要包含头文件<tr1/memory>，并且 using namespace std::tr1;
3. std::tr1中的内容是待加入标准库的。

http://www.cnblogs.com/sunshinewave/p/5296666.html
(1) 不要把一个原生指针给多个shared_ptr管理；
(2) 使用shared_ptr包装this指针带来的问题
(3) shared_ptr循环引用导致内存泄露(类似死锁)
(4) 多线程同时访问智能指针，并将其赋值到其它智能指针时，可能发生两个线程同时操作引用计数，而导致计数失败或无效等情况，从而导致程序崩溃
(5) 不要构造一个临时的shared_ptr作为函数的参数(http://blog.csdn.net/henan_lujun/article/details/8984543)
(6) 使用enable_shared_from_this机制来把this从类内部传递出来
(7) 增加和减小引用计数必须是原子操作
(8) shared_ptr<Foo> x(new Foo); 需要为 Foo 和 ref_count 各分配一次内存，现在用 make_shared() 的话，可以一次分配一块足够大的内存，供 Foo 和 ref_count 对象容身


为什么多线程读写 shared_ptr 要加锁: http://www.cnblogs.com/Solstice/archive/2013/01/28/2879366.html
http://blog.csdn.net/hp_truth/article/details/40511617
http://blog.csdn.net/coolmeme/article/details/43195587